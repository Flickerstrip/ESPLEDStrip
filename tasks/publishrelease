#!/bin/bash


ROOT=$(cd `dirname "${BASH_SOURCE[0]}"`/.. && pwd)
REPO=Flickerstrip/FlickerstripFirmware
RELEASE=`git describe --abbrev=0`
SITEROOT=/Users/julian/Documents/Programming/flickerstrip.com
  
uploadFile() {
    FILE_PATH=$1
    FILE_NAME=$(basename "$FILE_PATH")
    curl -s -S -X POST https://uploads.github.com/repos/$REPO/releases/$ID/assets?name=$FILE_NAME -A "$REPO script" --header "Content-Type: application/octet-stream" --header "Accept: application/vnd.github.v3+json" --data-binary @"$FILE_PATH" -H "Authorization: token `cat $ROOT/credentials.txt`" > /dev/null
}

function blue() {
    echo -e '\033[34m'"$1"'\033[39m'
}

if [ ! -e "$ROOT/credentials.txt" ]; then
    echo "credentials.txt not found, fill this with an access token to continue"
    exit
fi

RELEASE_LOG=$(mktemp /tmp/releasetext.XXXXXX)
(echo "Changelog: "; git log `git describe --tags --abbrev=0 'HEAD^'`..HEAD --oneline | tail -n +2 | tail -r | sed 's/^[^ ]* /* /') > $RELEASE_LOG

touch -A -01 $RELEASE_LOG
EDIT_TIME=`stat -f %m $RELEASE_LOG`

vi $RELEASE_LOG

NEW_TIME=`stat -f %m $RELEASE_LOG`
if [ "$EDIT_TIME" -eq "$NEW_TIME" ]
then
    echo "Publish release cancelled"
else
    blue "Building project"
    (cd $ROOT; platformio run; cp $ROOT/.pioenvs/esp12e/firmware.bin $ROOT/releases/$RELEASE.bin)

    # Generate json body
    DATA_FILE=/tmp/publishreleasedata.json
    echo -n '{"tag_name":"'$RELEASE'","name":"'$RELEASE'","body":' > $DATA_FILE
    cat $RELEASE_LOG | python -c 'import json,sys;print(json.dumps(sys.stdin.read()))' | tr -d '\n' >> $DATA_FILE
    echo -n ',"draft":false,"prerelease":false}' >> $DATA_FILE

    blue "Creating release"
    ID=$(curl https://api.github.com/repos/$REPO/releases -H "Authorization: token `cat $ROOT/credentials.txt`" --data @"$DATA_FILE" | perl -nle 'print "$1" if (/"id":.?([0-9]*?),/)' | head -n 1)

    blue "Uploading binary"
    uploadFile $ROOT/releases/$RELEASE.bin
    
    #copy to site root
    cp $ROOT/releases/$RELEASE.bin $SITEROOT/firmware/$RELEASE.bin

    UNIXNOW=`date +%s`
    echo "{'latest':'$RELEASE.bin','updated':'$UNIXNOW'}" > $SITEROOT/firmware/$RELEASE.bin
fi

